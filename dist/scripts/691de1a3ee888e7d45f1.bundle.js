!function(e){function n(n){for(var o,r,c=n[0],u=n[1],i=n[2],m=0,d=[];m<c.length;m++)r=c[m],Object.prototype.hasOwnProperty.call(l,r)&&l[r]&&d.push(l[r][0]),l[r]=0;for(o in u)Object.prototype.hasOwnProperty.call(u,o)&&(e[o]=u[o]);for(s&&s(n);d.length;)d.shift()();return a.push.apply(a,i||[]),t()}function t(){for(var e,n=0;n<a.length;n++){for(var t=a[n],o=!0,c=1;c<t.length;c++){var u=t[c];0!==l[u]&&(o=!1)}o&&(a.splice(n--,1),e=r(r.s=t[0]))}return e}var o={},l={16:0},a=[];function r(n){if(o[n])return o[n].exports;var t=o[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,r),t.l=!0,t.exports}r.e=function(e){var n=[],t=l[e];if(0!==t)if(t)n.push(t[2]);else{var o=new Promise((function(n,o){t=l[e]=[n,o]}));n.push(t[2]=o);var a,c=document.createElement("script");c.charset="utf-8",c.timeout=120,r.nc&&c.setAttribute("nonce",r.nc),c.src=function(e){return r.p+"scripts/"+{48:"de9cb81b02cc2c2a5129",49:"ca7d3fdad8dc4b469284"}[e]+".bundle.js"}(e);var u=new Error;a=function(n){c.onerror=c.onload=null,clearTimeout(i);var t=l[e];if(0!==t){if(t){var o=n&&("load"===n.type?"missing":n.type),a=n&&n.target&&n.target.src;u.message="Loading chunk "+e+" failed.\n("+o+": "+a+")",u.name="ChunkLoadError",u.type=o,u.request=a,t[1](u)}l[e]=void 0}};var i=setTimeout((function(){a({type:"timeout",target:c})}),12e4);c.onerror=c.onload=a,document.head.appendChild(c)}return Promise.all(n)},r.m=e,r.c=o,r.d=function(e,n,t){r.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,n){if(1&n&&(e=r(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(r.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)r.d(t,o,function(n){return e[n]}.bind(null,o));return t},r.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(n,"a",n),n},r.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},r.p="https://cdn.jsdelivr.net/gh/zhouxiaobo1990/blockly_jsdelivr@0.0.8/dist/",r.oe=function(e){throw console.error(e),e};var c=window.webpackJsonp=window.webpackJsonp||[],u=c.push.bind(c);c.push=n,c=c.slice();for(var i=0;i<c.length;i++)n(c[i]);var s=u;a.push([241,0,2,1,4,6,3,5]),t()}({215:function(e,n,t){"use strict";t.r(n),n.default=t.p+"images/file-loader-711f38014de90d1647349b0d26b750be.png"},241:function(e,n,t){"use strict";t.r(n);var o=t(9),l=t(88),a=t.n(l);document.getElementById("helpDialogContents").innerHTML=a.a,o.a({toolbox:'<xml xmlns="https://developers.google.com/blockly/xml">\n  <category name="乌龟" colour="%{BKY_CUSTOM_TURTLE_ENVIRONMENT_MOVE_HUE}">\n    <block type="custom_turtle_environment_move">\n      <value name="DISTANCE">\n        <shadow type="math_number">\n          <field name="NUM">0</field>\n        </shadow>\n      </value>\n    </block>\n    <block type="custom_turtle_environment_move_to_coordinate">\n      <value name="X">\n        <shadow type="math_number">\n          <field name="NUM">0</field>\n        </shadow>\n      </value>\n      <value name="Y">\n        <shadow type="math_number">\n          <field name="NUM">0</field>\n        </shadow>\n      </value>\n    </block>\n    <block type="custom_turtle_environment_turn">\n      <value name="ANGLE">\n        <shadow type="custom_angle">\n          <field name="ANGLE">90</field>\n        </shadow>\n      </value>\n    </block>\n    <block type="custom_turtle_environment_turn_to_angle">\n      <value name="ANGLE">\n        <shadow type="custom_angle">\n          <field name="ANGLE">90</field>\n        </shadow>\n      </value>\n    </block>\n  </category>\n  <category name="画笔" colour="%{BKY_CUSTOM_TURTLE_ENVIRONMENT_PEN_HUE}">\n    <block type="custom_turtle_environment_set_pen">\n    </block>\n    <block type="custom_turtle_environment_set_pen_color">\n      <value name="COLOUR">\n        <shadow type="colour_picker">\n          <field name="COLOUR">#000000</field>\n        </shadow>\n      </value>\n    </block>\n    <block type="custom_turtle_environment_set_pen_width">\n      <value name="WIDTH">\n        <shadow type="math_number">\n          <field name="NUM">1</field>\n        </shadow>\n      </value>\n    </block>\n    <block type="custom_turtle_environment_fill">\n      <value name="COLOUR">\n        <shadow type="colour_picker">\n          <field name="COLOUR">#000000</field>\n        </shadow>\n      </value>\n    </block>\n  </category>\n  <category name="喷漆" colour="%{BKY_CUSTOM_TURTLE_ENVIRONMENT_DRAW_HUE}">\n    <block type="custom_turtle_environment_draw_image">\n    </block>\n  </category>\n  <category name="其他" colour="%{BKY_CUSTOM_HUE}">\n    <block type="custom_turtle_environment_set_visibility">\n    </block>\n    <block type="custom_turtle_environment_clear_canvas">\n    </block>\n    <block type="custom_wait_seconds">\n      <value name="SECONDS">\n        <shadow type="math_number">\n          <field name="NUM">1</field>\n        </shadow>\n      </value>\n    </block>\n    <block type="custom_breakpoint">\n    </block>\n  </category>\n  <sep></sep>\n  <category name="循环" colour="%{BKY_LOOPS_HUE}">\n    <block type="controls_repeat_ext">\n      <value name="TIMES">\n        <shadow type="math_number">\n          <field name="NUM">10</field>\n        </shadow>\n      </value>\n    </block>\n  </category>\n  <category name="数学" colour="%{BKY_MATH_HUE}">\n    <block type="math_number">\n      <field name="NUM">123</field>\n    </block>\n    <block type="math_arithmetic">\n      <value name="A">\n        <shadow type="math_number">\n          <field name="NUM">1</field>\n        </shadow>\n      </value>\n      <value name="B">\n        <shadow type="math_number">\n          <field name="NUM">1</field>\n        </shadow>\n      </value>\n    </block>\n    <block type="math_constant"></block>\n  </category>\n  <category name="变量" colour="%{BKY_VARIABLES_HUE}" custom="VARIABLE"></category>\n</xml>\n',fetchInitial:async function(){return await t.e(48).then(t.t.bind(null,278,3))},fetchSolution:async function(){return await t.e(49).then(t.t.bind(null,279,3))}})},88:function(e,n,t){var o="<h2 id=任务目标>任务目标</h2> <p>根据所给图片，做一个汽车在公路上行驶的画面：</p> <ol> <li>汽车始终保持在屏幕中央</li> <li>汽车轮子在不断滚动</li> <li>道路和道路两边的树木相对汽车不断地往后移动</li> </ol> <p><img src="+t(17)(t(215))+' alt=""></p> <div class=hint> <p>提示：</p> <ol> <li>把松树和道路这些参照物看作一个整体</li> <li>将这些参照物生成一个大小为1200✕400的画卷，需保证画卷的左边600✕400和右边600✕400相等。</li> <li>重复显示画卷横坐标的[100, 500] → [700, 1100]</li> </ol> </div> ';e.exports=o}});